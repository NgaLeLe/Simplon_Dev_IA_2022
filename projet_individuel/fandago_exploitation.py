#!/usr/bin/env python
# coding: utf-8

# In[1]:


get_ipython().run_line_magic('pwd', '')


# In[2]:


#fandango_scores.csv
import pandas as pd
reviews = pd.read_csv("donnees/fandango_scores.csv")
reviews.head()


# 1. Sélectionner les colonnes suivantes et assigner les au dataframe norm_reviews:

# In[3]:


norm_reviews = reviews[['FILM', 'RT_user_norm', 'Metacritic_user_nom', 'IMDB_norm', 'Fandango_Ratingvalue', 'Fandango_Stars']] 


# 2. Afficher les premières lignes de norm_reviews.

# In[4]:


norm_reviews.loc[1:5]


# In[5]:


#verifier les données qui contient val maquant
norm_reviews.isnull().sum()


# In[6]:


import matplotlib.pyplot as plt
from numpy import arange

#creer un dictionnaire de nom du colonne 
#key : id du col, ça fonctionne par norm_reviews.columns.get_loc(k)
#value : name du col
dic_col_id = {norm_reviews.columns.get_loc(k) : k  for k in norm_reviews.columns  }

#list des cols pour grafik
num_cols = [dic_col_id[i] for i in range(1,6)]

#creer bar_positions
bar_positions = arange(5)+1

#creer bar_height qui contient des val des cols num_cols pour film 'Aven...'
bar_heights = norm_reviews[num_cols].loc[norm_reviews['FILM']=='Avengers: Age of Ultron (2015)'].values[0]
width = 0.5

plt.figure()
fig, ax = plt.subplots()

ax.bar(bar_positions,bar_heights, width, color = 'blue')
#creer xstick du range 1-5, placer trait du tick

ax.set_xticks(range(1,6))
#met label(intitulé) du xtick du valeur dans la liste ds cols num_cols
ax.set_xticklabels(num_cols, rotation=90)

ax.set_title("Graphique à barre du film Avenger")
plt.show()


# # Aligner l'intitulé et le trait sur l'axe x

•Créer un sous-graphique et assigner l'objet Figure à la variable figet l'objet Axes à la variable ax.
•Générer un diagramme en barre avec:
•Les coordonnées x de toutes les barres définie par bar_positions qui doit prendre les valeurs 1,2,3,4 et 5
•La hauteur de chaque barres définie par bar_heights qui doit prendre les 5 colonnes qui nous intéressent pour le film ‘Avengers: Age of Ultron(2015)’
•Avec l’argument width vous pouvez gérer l’épaisseur des barres. Fixé-là à 0.5
•Placer les 5 traits correspondant aux barres.
•Placer les intitulés de num_colset faire une rotation de 90 degrés.
•Nommer l'axe x par 'Sources de notation'.
•Nommer l'axe y par 'Note moyenne'.
•Définir le titre par 'Moyenne des notes utilisateurs pour le film Avengers: Age of Ultron(2015)'.
•Afficher le diagramme.

# In[7]:


import matplotlib.pyplot as plt
from numpy import arange

bar_heights = norm_reviews[num_cols].loc[norm_reviews['FILM']=='Avengers: Age of Ultron (2015)'].values[0]
width = 0.5

plt.figure()
fig, ax = plt.subplots()

ax.bar(bar_positions,bar_heights, width, color = 'green')

#creer xstick du range 1-5, placer trait du tick
ax.set_xticks(range(1,6))

#met label(intitulé) du xtick du valeur dans la liste ds cols num_cols
ax.set_xticklabels(num_cols, rotation=90, color="#FF0FAC")

ax.set_xlabel("Sources de notation")
ax.set_ylabel("Note moyenne")
ax.set_title("Moyenne des notes utilisateurs pour le film Avengers: Age of Ultron(2015)")

plt.show()

#conclusion: Metacritic a la plus base de note moyen, Fandago a la plus haute de note


# # Diagramme en barres horizontales

# In[8]:


import matplotlib.pyplot as plt

bar_heights = norm_reviews[num_cols].loc[norm_reviews['FILM']=='Avengers: Age of Ultron (2015)'].values[0]
width = 0.5
bar_positions = arange(5)+1

fig, ax = plt.subplots()
ax.barh(bar_positions,bar_heights, width, color = 'orange')

ax.set_yticks(bar_positions)
ax.set_yticklabels(num_cols)

ax.set_ylabel("Sources de notation")
ax.set_xlabel("Note moyenne")
ax.set_title("Moyenne des notes utilisateurs pour le film Avengers: Age of Ultron(2015)")

plt.show()


# # Graphique à nuage de points

# Générer un graphique à nuage de points avec la colonne 'Fandango_Ratingvalue' sur l'axe x et etla colonne 'RT_user_norm' pour l'axe y.
# •Définir pour l'axe x 'Fandango' et 'RottenTomatoes' pour l'axe y.
# •Afficher le graphique résultant.

# In[9]:


import matplotlib.pyplot as plt

#
fig, ax = plt.subplots()

ax.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['RT_user_norm'], marker='x', color='#F0A400')
ax.set_xlabel('Fandango')
ax.set_ylabel('RottenTomatoes')

plt.show()
plt.close()
#conclusion: fandago ça donne les notes


# # Intervertir les axes

# Assigner à la variable fig la figure retourné par plt.figure()
# •Nous allons ici un graphiques avec deux sous-graphiques à l’aide de la méthode add_subplot() répartie sur une ligne et deux colonnes:
# •Avec fig.add_subplot(...,...,...) assigné à ax1 l’axe de la 1èrefigure.
# •Avec fig.add_subplot(...,...,...) assigné à ax1 l’axe de la 2èmefigure.
# •Pour le sous-graphique associé à la variable ax1.
#     •Générer un graphique à nuage de points avec la colonne 'Fandango_Ratingvalue' sur l'axe x et la colonne 'RT_user_norm' sur l'axe y
#     •Définir pour l'axe x 'Fandango' et pour l'axe y 'RottenTomatoes'
# •Pour le sous-graphique associé à la variable ax2.
#     •Générer un graphique à nuage de points avec la colonne 'RT_user_norm' sur l'axe x et la colonne 'Fandango_Ratingvalue' sur l'axe y
#     •Définir pour l'axe x 'RottenTomatoes' et pour l'axe y 'fandango'
# •Afficher le graphique résultant.

# In[10]:


import matplotlib.pyplot as plt
fig, ax = plt.subplots(1, 2, figsize=(10,5))
myColor='green'
ax1 = ax[0]
ax1.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['RT_user_norm'], color='pink', marker='D')
ax1.set_xlabel('Fandango', color=myColor)
ax1.set_ylabel('RottenTomatoes', color=myColor)

ax2 = ax[1]
ax2.scatter(norm_reviews['RT_user_norm'], norm_reviews['Fandango_Ratingvalue'], marker='*', color='blue')
ax2.set_ylabel('Fandango', color=myColor)
ax2.set_xlabel('RottenTomatoes', color=myColor)

plt.show()


# In[19]:


import matplotlib.pyplot as plt
fig = plt.figure(figsize=(10,5))
ax1 = fig.add_subplot(1,2,1)
ax1.plot(norm_reviews['Fandango_Ratingvalue'], norm_reviews['RT_user_norm'], linestyle='', color='red', marker='.', markersize=10)
ax1.set_xlabel('Fandago')
ax1.set_ylabel('Rotten Tomatoes')

ax2 = fig.add_subplot(1,2,2)
ax2.plot(norm_reviews['RT_user_norm'], norm_reviews['Fandango_Ratingvalue'], linestyle='', marker='*', color='blue')
ax2.set_ylabel('Fandango', color=myColor)
ax2.set_xlabel('RottenTomatoes', color=myColor)

plt.show()

#explication: il y a relation linéaire


# # Comparaison de corrélations (9)

# Tracer un graphiques avec 3 sous-graphiques:
# •Pour le sous-graphique associé à la variable ax1:
#     •Générer un graphique à nuage de points avec la colonne 'Fandango_Ratingvalue' sur l'axe x et la colonne 'RT_user_norm' sur l'axe y
#     •Définir pour l'axe x 'Fandango' et pour l'axe y 'RottenTomatoes'
#     •Définir les limites des axes x et y en les fixant de 0 à 5 avec .set_xlim(..,..) et set_ylim(..,..)
# •Pour le sous-graphique associé à la variable ax2:
#     •Générer un graphique à nuage de points avec la colonne 'Fandango_Ratingvalue' sur l'axe x et la colonne 'Metacritic_user_nom' sur l'axe y
#     •Définir pour l'axe x 'Fandango' et pour l'axe y 'Metacritic'
#     •Définir les limites des axes x et y en les fixant de 0 à 5
# •Pour le sous-graphique associé à la variable ax3:
#     •Générer un graphique à nuage de points avec la colonne 'Fandango_Ratingvalue' sur l'axe x et la colonne 'IMDB_norm' sur l'axe y
#     •Définir pour l'axe x 'Fandango' et pour l'axe y 'IMDB'
#     •Définir les limites des axes x et y en les fixant de 0 à 5
# •Afficher le graphique
# 

# In[12]:


import matplotlib.pyplot as plt

fig, ax = plt.subplots(2, 2, figsize=(10,8))
ax1 = ax[0,0]
ax1.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['RT_user_norm'], marker='v')
ax1.set_xlabel('Fandango')
ax1.set_ylabel('RottenTomatoes')
ax1.set_xlim(0,5)
ax1.set_ylim(0,5)

ax2 = ax[0,1]
ax2.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['Metacritic_user_nom'], marker='*', color="#337F45")
ax2.set_xlabel('Fandango')
ax2.set_ylabel('Metacritic')
ax2.set_xlim(0,5)
ax2.set_ylim(0,5)

ax3 = ax[1,0]
ax3.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['IMDB_norm'], marker='.', color="#FA0045")
ax3.set_xlabel('Fandango')
ax3.set_ylabel('IMDB_norm')
ax3.set_xlim(0,5)
ax3.set_ylim(0,5)
plt.show()


# # Utilise add_subplot

# In[25]:


import matplotlib.pyplot as plt
fig = plt.figure(figsize=(15,5))
ax1 = fig.add_subplot(1,3,1) 
ax2 = fig.add_subplot(1,3,2)
ax3 = fig.add_subplot(1,3,3)

ax1.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['RT_user_norm'], 
            marker='v', color="#3111F1")
ax1.set_xlabel('Fandango')
ax1.set_ylabel('RottenTomatoes')
ax1.set_xlim(0,5)
ax1.set_ylim(0,5)
#le pluspart des notes de Fandago des films ayant des notes plus 2.5, sont étalé de 1 à 5

ax2.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['Metacritic_user_nom'], 
            marker='*', color="#337F45")
ax2.set_xlabel('Fandango')
ax2.set_ylabel('Metacritic')
ax2.set_xlim(0,5)
ax2.set_ylim(0,5)
#

ax3.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['IMDB_norm'], 
            marker='.', color="#FA0045")
ax3.set_xlabel('Fandango')
ax3.set_ylabel('IMDB_norm')
ax3.set_xlim(0,5)
ax3.set_ylim(0,5)
#Fandago se fait la tendance des films
plt.show()


# In[26]:


norm_reviews.corr()


# On peut regarder la ligne fandago_Ratingvalue: 

# # Distribution de fréquences(10)

# In[32]:


import numpy as np

#creer une series de frequent du col TMDB_norm
imdb_distribution = norm_reviews['IMDB_norm'].value_counts()

#trie cet series par index de series
imdb_distribution = imdb_distribution.loc[sorted(imdb_distribution.index)]

#soit 
# imdb_distribution = imdb_distribution.sort_index()


# In[33]:


#afficher series
imdb_distribution


# Générer un histogramme des valeurs de la colonne 'Fandango_Ratingvalue' en utilisant un range de 0 à 5.

# In[34]:


#histogramme p10
import matplotlib.pyplot as plt

fig, ax = plt.subplots()

#bins: nombre de barre s/histogramme
#ax est classe
ax.hist(norm_reviews['Fandango_Ratingvalue'], range=(0,5), bins=20)

plt.show()


# on a des notes assez relevé, ça concentre à partir de note 3.5

# # Comparaison d'histogrammes(12)

# In[43]:


import matplotlib.pyplot as plt

fig, ax = plt.subplots(2, 2, figsize=(10,8))


# AXE 1
#Générer un histogramme des valeurs de la colonne 'Fandango_Ratingvalue' en utilisant 
# 20 classes (argument bins=20) et un intervalle de 0 à 5 (argument range=(0,5)).
ax1 = ax[0,0]
ax1.hist(norm_reviews['Fandango_Ratingvalue'], range=(0,5), bins=20, color='yellow')
ax1.set_ylim([0, 50])
ax1.set_title('Fandago')

#AXE 2
# Générer un histogramme des valeurs de la colonne 'RT_user_norm' 
# en utilisant 20 classes (bins) 
# et un intervalle de 0 à 5
ax2 = ax[0,1]
ax2.hist(norm_reviews['RT_user_norm'], range=(0,5), bins=20, color='green')
ax2.set_ylim([0, 50])
ax2.set_title('Rate_user')

ax3 = ax[1,0]
ax3.hist(norm_reviews['Metacritic_user_nom'], range=(0,5), bins=20, color='brown')
ax3.set_ylim([0, 50])
ax3.set_title('Metacritc')

ax4 = ax[1,1]
ax4.hist(norm_reviews['IMDB_norm'], range=(0,5), bins=20, color='#33F212')
ax4.set_ylim([0, 50])
ax4.set_title('IMDB')

fig.subplots_adjust(wspace=0.4, hspace=0.3) 
#si grafik a plusieurs figure, on peut configurer l'espace entre des figures
plt.show()
#ET_user: la note est beaucoup bien étalé entre 1 et moins 5
#Metacritic: est moins étalé, mais la fréquence est concentré de 


# # Plusieurs diagrammes à boîtes (12)

# In[17]:


import matplotlib.pyplot as plt

fig, ax = plt.subplots(1, 5, figsize=(15,4))

for c in num_cols :
    ax[num_cols.index(c)].boxplot(norm_reviews[c],showfliers=False)
    ax[num_cols.index(c)].set_ylim([0,5])
    ax[num_cols.index(c)].set_xticklabels(c)
_
plt.show()


# In[44]:


import matplotlib.pyplot as plt

#cree les donnees pour chaque boite contenant des valuers du col
data_user = norm_reviews["RT_user_norm"].tolist() 
data_meta = norm_reviews["Metacritic_user_nom"].tolist() 
data_imdb = norm_reviews["IMDB_norm"].tolist() 
data_fand = norm_reviews["Fandango_Ratingvalue"].tolist() 

#creer list de box_name par selectionner des éléments dans list num_cols
box_name = num_cols[0:4]

#cree des donnes pour toutes de boites 
data_boites = [data_user, data_meta, data_imdb, data_fand]

fig, ax = plt.subplots(figsize=(12,8))
ax.boxplot(data_boites)
ax.set_ylim([0,5])
ax.set_title("Boite à moustache par des variables".upper(), color='blue')

plt.xticks([1,2,3,4],box_name, rotation=90)
plt.show()


# In[45]:


box_name = num_cols[0:4]
box_name


# In[ ]:




